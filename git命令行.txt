git配置

1、全局配置
   用户名配置：
   git config --global user.name "Your Name Here"
   
   邮箱配置：
   git config --global user.email your_email@youremail.com
   
   查看配置：
   git config --list
   
2、产生rsa密钥对
   ssh-keygen.exe -t rsa
   一路回车，会在下面路径生成你的公私钥
   [windows] : C:\Users\XXX\.ssh
   [linux]   : ~/.ssh/
   私钥：id_rsa
   公钥：id_rsa.pub
   
3、将公钥加入到服务端配置中
   用自己用户登录gitweb服务，profile setting中有ssh keys一项
   将自己的公钥复制添加进来

4、克隆git的代码到当前路径
   修改下面ip为git服务器地址
   git clone git@127.0.0.1:masternux_filter.git

5、创建本地develop分支
   查看本地分支：
   git branch --list
   
   查看远程分支：
   git branch -r 
   
   创建本地分支：
   git branch develop
   
   删除本地分支
   git branch -d develop

6、切换分支
   git checkout develop
   切换到develop分支

7、从远程服务器更新文件到本地
   git  pull

8、添加/删除一个文件
   添加一个新文件:
   git add  newfile
   删除一个文件
   git rm  file

9、提交修改
   git commit -m "message modify"
   注意：
   此时的提交只是修改了本地缓存，并没有提交到远程服务器

10、提交修改到远程服务器
   git push
   此时可以去git web上查看文件更新

11、$ mkdir  aa 创建文件夹(make directory)
12、$ cd  aa  进入文件夹(change directory)
13、$ pwd  打印当前文件夹路径(print working directory)

14、$ ls -al
15、$ ls -ah

16、$ git commit 1.txt -m "add 1.txt 2015年8月25日11:25:21"
17、$ git commit 1.txt （进入一个窗口）
       :!q退出
18、$ touch 2.txt  创建文件(工作区)

19、$ cat 1.txt （查看文件内容）
20、$ git diff （分析工作区和暂存区的区别）
21、$ git diff --cached（分析工作区和历史记录区别）
22、$ git commit -a -m"所有工区"
23、$ git log --oneline（历史记录）
24、$ git reset --hard HEAD^（回到上一个版本）
25、$ git reflog（命令记录）
26、$ git vim 1.txt（修改文件内容）---（o输入内容）--（:wq!回车）
27、$ git checkout -- 1.txt（丢弃工作区）
28、$ ls（查看当前工作区有哪些文件）
29、$ rm 1.txt （删除一个文件）
30、$ cd ~（切换到当前用户根目录下）
31、$ git log --oneline（查看）
       $ git reset --hard ccffd5e（恢复文件：恢复上一次操作）
32、复制文件  （标记后-回车）
33、$ git log --after-2015-08-24  查看历史记录（从2015-08-24到今天）
34、$ git remote add sshgit git@github.com:TongKaiQiang/webApp.git（关联仓库）
